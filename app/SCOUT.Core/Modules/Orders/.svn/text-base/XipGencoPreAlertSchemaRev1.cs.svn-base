//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 
namespace SCOUT.Core.Data
{
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategory("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProvider("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRoot("XipGencoPreAlertSchemaRev1")]
    [global::System.ComponentModel.Design.HelpKeyword("vs.data.DataSet")]
    public partial class XipGencoPreAlertSchemaRev1 : global::System.Data.DataSet {
        
        private xip_genco_pre_alertDataTable tablexip_genco_pre_alert;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        public XipGencoPreAlertSchemaRev1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected XipGencoPreAlertSchemaRev1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
            base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["xip_genco_pre_alert"] != null)) {
                    base.Tables.Add(new xip_genco_pre_alertDataTable(ds.Tables["xip_genco_pre_alert"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
            }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public xip_genco_pre_alertDataTable xip_genco_pre_alert {
            get {
                return this.tablexip_genco_pre_alert;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.Browsable(true)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        public override global::System.Data.DataSet Clone() {
            XipGencoPreAlertSchemaRev1 cln = ((XipGencoPreAlertSchemaRev1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["xip_genco_pre_alert"] != null)) {
                    base.Tables.Add(new xip_genco_pre_alertDataTable(ds.Tables["xip_genco_pre_alert"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        internal void InitVars(bool initTable) {
            this.tablexip_genco_pre_alert = ((xip_genco_pre_alertDataTable)(base.Tables["xip_genco_pre_alert"]));
            if ((initTable == true)) {
                if ((this.tablexip_genco_pre_alert != null)) {
                    this.tablexip_genco_pre_alert.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        private void InitClass() {
            this.DataSetName = "XipGencoPreAlertSchemaRev1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XipGencoPreAlertSchemaRev1.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablexip_genco_pre_alert = new xip_genco_pre_alertDataTable();
            base.Tables.Add(this.tablexip_genco_pre_alert);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        private bool ShouldSerializexip_genco_pre_alert() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            XipGencoPreAlertSchemaRev1 ds = new XipGencoPreAlertSchemaRev1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                    && (s1.ReadByte() == s2.ReadByte())); ) {
                                        ;
                                    }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void xip_genco_pre_alertRowChangeEventHandler(object sender, xip_genco_pre_alertRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProvider("GetTypedTableSchema")]
        public partial class xip_genco_pre_alertDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column_DPS_;
            
            private global::System.Data.DataColumn columnPPID;
            
            private global::System.Data.DataColumn columnDate_Shipped;
            
            private global::System.Data.DataColumn columnTime_Shipped;
            
            private global::System.Data.DataColumn columnShip_Code;
            
            private global::System.Data.DataColumn columnShipped_By;
            
            private global::System.Data.DataColumn columnFrom_Stock_Room;
            
            private global::System.Data.DataColumn columnShipment_Type;
            
            private global::System.Data.DataColumn columnShipped_To;
            
            private global::System.Data.DataColumn columnPackslip;
            
            private global::System.Data.DataColumn columnShipment_Reference_Number;
            
            private global::System.Data.DataColumn columnRMA;
            
            private global::System.Data.DataColumn columnUnit_Cost;
            
            private global::System.Data.DataColumn columnF9_Comments;
            
            private global::System.Data.DataColumn columnPart_Number;
            
            private global::System.Data.DataColumn columnStockroom;
            
            private global::System.Data.DataColumn columnService_Tag;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_genco_pre_alertDataTable() {
                this.TableName = "xip_genco_pre_alert";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            internal xip_genco_pre_alertDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected xip_genco_pre_alertDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
                this.InitVars();
                }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn _DPS_Column {
                get {
                    return this.column_DPS_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn PPIDColumn {
                get {
                    return this.columnPPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Date_ShippedColumn {
                get {
                    return this.columnDate_Shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Time_ShippedColumn {
                get {
                    return this.columnTime_Shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Ship_CodeColumn {
                get {
                    return this.columnShip_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipped_ByColumn {
                get {
                    return this.columnShipped_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn From_Stock_RoomColumn {
                get {
                    return this.columnFrom_Stock_Room;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipment_TypeColumn {
                get {
                    return this.columnShipment_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipped_ToColumn {
                get {
                    return this.columnShipped_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn PackslipColumn {
                get {
                    return this.columnPackslip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipment_Reference_NumberColumn {
                get {
                    return this.columnShipment_Reference_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn RMAColumn {
                get {
                    return this.columnRMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Unit_CostColumn {
                get {
                    return this.columnUnit_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn F9_CommentsColumn {
                get {
                    return this.columnF9_Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Part_NumberColumn {
                get {
                    return this.columnPart_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn StockroomColumn {
                get {
                    return this.columnStockroom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Service_TagColumn {
                get {
                    return this.columnService_Tag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_genco_pre_alertRow this[int index] {
                get {
                    return ((xip_genco_pre_alertRow)(this.Rows[index]));
                }
            }
            
            public event xip_genco_pre_alertRowChangeEventHandler xip_genco_pre_alertRowChanging;
            
            public event xip_genco_pre_alertRowChangeEventHandler xip_genco_pre_alertRowChanged;
            
            public event xip_genco_pre_alertRowChangeEventHandler xip_genco_pre_alertRowDeleting;
            
            public event xip_genco_pre_alertRowChangeEventHandler xip_genco_pre_alertRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Addxip_genco_pre_alertRow(xip_genco_pre_alertRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_genco_pre_alertRow Addxip_genco_pre_alertRow(
                string _DPS_, 
                string PPID, 
                string Date_Shipped, 
                string Time_Shipped, 
                string Ship_Code, 
                string Shipped_By, 
                string From_Stock_Room, 
                string Shipment_Type, 
                string Shipped_To, 
                string Packslip, 
                string Shipment_Reference_Number, 
                string RMA, 
                string Unit_Cost, 
                string F9_Comments, 
                string Part_Number, 
                string Stockroom, 
                string Service_Tag) {
                xip_genco_pre_alertRow rowxip_genco_pre_alertRow = ((xip_genco_pre_alertRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                                                              _DPS_,
                                                              PPID,
                                                              Date_Shipped,
                                                              Time_Shipped,
                                                              Ship_Code,
                                                              Shipped_By,
                                                              From_Stock_Room,
                                                              Shipment_Type,
                                                              Shipped_To,
                                                              Packslip,
                                                              Shipment_Reference_Number,
                                                              RMA,
                                                              Unit_Cost,
                                                              F9_Comments,
                                                              Part_Number,
                                                              Stockroom,
                                                              Service_Tag};
                rowxip_genco_pre_alertRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowxip_genco_pre_alertRow);
                return rowxip_genco_pre_alertRow;
                }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public override global::System.Data.DataTable Clone() {
                xip_genco_pre_alertDataTable cln = ((xip_genco_pre_alertDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new xip_genco_pre_alertDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            internal void InitVars() {
                this.column_DPS_ = base.Columns["DPS#"];
                this.columnPPID = base.Columns["PPID"];
                this.columnDate_Shipped = base.Columns["Date Shipped"];
                this.columnTime_Shipped = base.Columns["Time Shipped"];
                this.columnShip_Code = base.Columns["Ship Code"];
                this.columnShipped_By = base.Columns["Shipped By"];
                this.columnFrom_Stock_Room = base.Columns["From Stock Room"];
                this.columnShipment_Type = base.Columns["Shipment Type"];
                this.columnShipped_To = base.Columns["Shipped To"];
                this.columnPackslip = base.Columns["Packslip"];
                this.columnShipment_Reference_Number = base.Columns["Shipment Reference Number"];
                this.columnRMA = base.Columns["RMA"];
                this.columnUnit_Cost = base.Columns["Unit Cost"];
                this.columnF9_Comments = base.Columns["F9 Comments"];
                this.columnPart_Number = base.Columns["Part Number"];
                this.columnStockroom = base.Columns["Stockroom"];
                this.columnService_Tag = base.Columns["Service Tag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            private void InitClass() {
                this.column_DPS_ = new global::System.Data.DataColumn("DPS#", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_DPS_);
                this.columnPPID = new global::System.Data.DataColumn("PPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPID);
                this.columnDate_Shipped = new global::System.Data.DataColumn("Date Shipped", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Shipped);
                this.columnTime_Shipped = new global::System.Data.DataColumn("Time Shipped", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime_Shipped);
                this.columnShip_Code = new global::System.Data.DataColumn("Ship Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShip_Code);
                this.columnShipped_By = new global::System.Data.DataColumn("Shipped By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipped_By);
                this.columnFrom_Stock_Room = new global::System.Data.DataColumn("From Stock Room", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrom_Stock_Room);
                this.columnShipment_Type = new global::System.Data.DataColumn("Shipment Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipment_Type);
                this.columnShipped_To = new global::System.Data.DataColumn("Shipped To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipped_To);
                this.columnPackslip = new global::System.Data.DataColumn("Packslip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackslip);
                this.columnShipment_Reference_Number = new global::System.Data.DataColumn("Shipment Reference Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipment_Reference_Number);
                this.columnRMA = new global::System.Data.DataColumn("RMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMA);
                this.columnUnit_Cost = new global::System.Data.DataColumn("Unit Cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Cost);
                this.columnF9_Comments = new global::System.Data.DataColumn("F9 Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF9_Comments);
                this.columnPart_Number = new global::System.Data.DataColumn("Part Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPart_Number);
                this.columnStockroom = new global::System.Data.DataColumn("Stockroom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockroom);
                this.columnService_Tag = new global::System.Data.DataColumn("Service Tag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Tag);
                this.column_DPS_.AllowDBNull = true;
                this.columnPPID.AllowDBNull = true;
                this.columnDate_Shipped.AllowDBNull = true;
                this.columnTime_Shipped.AllowDBNull = true;
                this.columnShip_Code.AllowDBNull = true;
                this.columnShipped_By.AllowDBNull = true;
                this.columnFrom_Stock_Room.AllowDBNull = true;
                this.columnShipment_Type.AllowDBNull = true;
                this.columnShipped_To.AllowDBNull = true;
                this.columnPackslip.AllowDBNull = true;
                this.columnShipment_Reference_Number.AllowDBNull = true;
                this.columnRMA.AllowDBNull = true;
                this.columnUnit_Cost.AllowDBNull = true;
                this.columnF9_Comments.AllowDBNull = true;
                this.columnPart_Number.AllowDBNull = true;
                this.columnStockroom.AllowDBNull = true;
                this.columnService_Tag.AllowDBNull = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_genco_pre_alertRow Newxip_genco_pre_alertRow() {
                return ((xip_genco_pre_alertRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new xip_genco_pre_alertRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override global::System.Type GetRowType() {
                return typeof(xip_genco_pre_alertRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.xip_genco_pre_alertRowChanged != null)) {
                    this.xip_genco_pre_alertRowChanged(this, new xip_genco_pre_alertRowChangeEvent(((xip_genco_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.xip_genco_pre_alertRowChanging != null)) {
                    this.xip_genco_pre_alertRowChanging(this, new xip_genco_pre_alertRowChangeEvent(((xip_genco_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.xip_genco_pre_alertRowDeleted != null)) {
                    this.xip_genco_pre_alertRowDeleted(this, new xip_genco_pre_alertRowChangeEvent(((xip_genco_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.xip_genco_pre_alertRowDeleting != null)) {
                    this.xip_genco_pre_alertRowDeleting(this, new xip_genco_pre_alertRowChangeEvent(((xip_genco_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Removexip_genco_pre_alertRow(xip_genco_pre_alertRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XipGencoPreAlertSchemaRev1 ds = new XipGencoPreAlertSchemaRev1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "xip_genco_pre_alertDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                            ;
                                        }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class xip_genco_pre_alertRow : global::System.Data.DataRow {
            
            private xip_genco_pre_alertDataTable tablexip_genco_pre_alert;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            internal xip_genco_pre_alertRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
                this.tablexip_genco_pre_alert = ((xip_genco_pre_alertDataTable)(this.Table));
                }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string _DPS_ {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert._DPS_Column]));
                }
                set {
                    this[this.tablexip_genco_pre_alert._DPS_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string PPID {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.PPIDColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.PPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Date_Shipped {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Date_ShippedColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Date_ShippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Time_Shipped {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Time_ShippedColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Time_ShippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Ship_Code {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Ship_CodeColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Ship_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipped_By {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Shipped_ByColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Shipped_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string From_Stock_Room {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.From_Stock_RoomColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.From_Stock_RoomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipment_Type {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Shipment_TypeColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Shipment_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipped_To {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Shipped_ToColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Shipped_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Packslip {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.PackslipColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.PackslipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipment_Reference_Number {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Shipment_Reference_NumberColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Shipment_Reference_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string RMA {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.RMAColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.RMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Unit_Cost {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Unit_CostColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Unit_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string F9_Comments {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.F9_CommentsColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.F9_CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Part_Number {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Part_NumberColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Part_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Stockroom {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.StockroomColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.StockroomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Service_Tag {
                get {
                    return ((string)(this[this.tablexip_genco_pre_alert.Service_TagColumn]));
                }
                set {
                    this[this.tablexip_genco_pre_alert.Service_TagColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class xip_genco_pre_alertRowChangeEvent : global::System.EventArgs {
            
            private xip_genco_pre_alertRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_genco_pre_alertRowChangeEvent(xip_genco_pre_alertRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_genco_pre_alertRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}