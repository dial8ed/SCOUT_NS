//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 
namespace SCOUT.Core.Data
{
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategory("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProvider("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRoot("XIPPreAlertRev1")]
    [global::System.ComponentModel.Design.HelpKeyword("vs.data.DataSet")]
    public partial class XIPPreAlertRev1 : global::System.Data.DataSet {
        
        private xip_pre_alertDataTable tablexip_pre_alert;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        public XIPPreAlertRev1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected XIPPreAlertRev1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
            base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["xip_pre_alert"] != null)) {
                    base.Tables.Add(new xip_pre_alertDataTable(ds.Tables["xip_pre_alert"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
            }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public xip_pre_alertDataTable xip_pre_alert {
            get {
                return this.tablexip_pre_alert;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.Browsable(true)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        public override global::System.Data.DataSet Clone() {
            XIPPreAlertRev1 cln = ((XIPPreAlertRev1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["xip_pre_alert"] != null)) {
                    base.Tables.Add(new xip_pre_alertDataTable(ds.Tables["xip_pre_alert"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        internal void InitVars(bool initTable) {
            this.tablexip_pre_alert = ((xip_pre_alertDataTable)(base.Tables["xip_pre_alert"]));
            if ((initTable == true)) {
                if ((this.tablexip_pre_alert != null)) {
                    this.tablexip_pre_alert.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        private void InitClass() {
            this.DataSetName = "XIPPreAlertRev1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XIPPreAlertRev1.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablexip_pre_alert = new xip_pre_alertDataTable();
            base.Tables.Add(this.tablexip_pre_alert);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        private bool ShouldSerializexip_pre_alert() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCode()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            XIPPreAlertRev1 ds = new XIPPreAlertRev1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                    && (s1.ReadByte() == s2.ReadByte())); ) {
                                        ;
                                    }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void xip_pre_alertRowChangeEventHandler(object sender, xip_pre_alertRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProvider("GetTypedTableSchema")]
        public partial class xip_pre_alertDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column_DPS__;
            
            private global::System.Data.DataColumn columnPPID;
            
            private global::System.Data.DataColumn columnPart_Num;
            
            private global::System.Data.DataColumn columnOEM;
            
            private global::System.Data.DataColumn columnService_Tag;
            
            private global::System.Data.DataColumn columnLicense_Plate;
            
            private global::System.Data.DataColumn column_Order__;
            
            private global::System.Data.DataColumn columnOrder_Date;
            
            private global::System.Data.DataColumn columnOrder_Time;
            
            private global::System.Data.DataColumn columnDate_Shipped;
            
            private global::System.Data.DataColumn columnTime_Shipped;
            
            private global::System.Data.DataColumn columnShip_Code;
            
            private global::System.Data.DataColumn columnShipped_By;
            
            private global::System.Data.DataColumn columnFrom_Stock_Room;
            
            private global::System.Data.DataColumn columnShipped_To;
            
            private global::System.Data.DataColumn columnPackslip;
            
            private global::System.Data.DataColumn columnwaybill;
            
            private global::System.Data.DataColumn columncustrtn_wbn;
            
            private global::System.Data.DataColumn columnShipment_Reference_Number;
            
            private global::System.Data.DataColumn columnRMA;
            
            private global::System.Data.DataColumn columnUnit_Cost;
            
            private global::System.Data.DataColumn columnF9_Comments;
            
            private global::System.Data.DataColumn columnIoc;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnpart_number;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_pre_alertDataTable() {
                this.TableName = "xip_pre_alert";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            internal xip_pre_alertDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected xip_pre_alertDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
                this.InitVars();
                }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn _DPS__Column {
                get {
                    return this.column_DPS__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn PPIDColumn {
                get {
                    return this.columnPPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Part_NumColumn {
                get {
                    return this.columnPart_Num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn OEMColumn {
                get {
                    return this.columnOEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Service_TagColumn {
                get {
                    return this.columnService_Tag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn License_PlateColumn {
                get {
                    return this.columnLicense_Plate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn _Order__Column {
                get {
                    return this.column_Order__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Order_DateColumn {
                get {
                    return this.columnOrder_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Order_TimeColumn {
                get {
                    return this.columnOrder_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Date_ShippedColumn {
                get {
                    return this.columnDate_Shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Time_ShippedColumn {
                get {
                    return this.columnTime_Shipped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Ship_CodeColumn {
                get {
                    return this.columnShip_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipped_ByColumn {
                get {
                    return this.columnShipped_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn From_Stock_RoomColumn {
                get {
                    return this.columnFrom_Stock_Room;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipped_ToColumn {
                get {
                    return this.columnShipped_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn PackslipColumn {
                get {
                    return this.columnPackslip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn waybillColumn {
                get {
                    return this.columnwaybill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn custrtn_wbnColumn {
                get {
                    return this.columncustrtn_wbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Shipment_Reference_NumberColumn {
                get {
                    return this.columnShipment_Reference_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn RMAColumn {
                get {
                    return this.columnRMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn Unit_CostColumn {
                get {
                    return this.columnUnit_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn F9_CommentsColumn {
                get {
                    return this.columnF9_Comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn IocColumn {
                get {
                    return this.columnIoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataColumn part_numberColumn {
                get {
                    return this.columnpart_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_pre_alertRow this[int index] {
                get {
                    return ((xip_pre_alertRow)(this.Rows[index]));
                }
            }
            
            public event xip_pre_alertRowChangeEventHandler xip_pre_alertRowChanging;
            
            public event xip_pre_alertRowChangeEventHandler xip_pre_alertRowChanged;
            
            public event xip_pre_alertRowChangeEventHandler xip_pre_alertRowDeleting;
            
            public event xip_pre_alertRowChangeEventHandler xip_pre_alertRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Addxip_pre_alertRow(xip_pre_alertRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_pre_alertRow Addxip_pre_alertRow(
                string _DPS__, 
                string PPID, 
                string Part_Num, 
                string OEM, 
                string Service_Tag, 
                string License_Plate, 
                string _Order__, 
                string Order_Date, 
                string Order_Time, 
                string Date_Shipped, 
                string Time_Shipped, 
                string Ship_Code, 
                string Shipped_By, 
                string From_Stock_Room, 
                string Shipped_To, 
                string Packslip, 
                string waybill, 
                string custrtn_wbn, 
                string Shipment_Reference_Number, 
                string RMA, 
                string Unit_Cost, 
                string F9_Comments, 
                string Ioc, 
                string description, 
                string part_number) {
                xip_pre_alertRow rowxip_pre_alertRow = ((xip_pre_alertRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                                                              _DPS__,
                                                              PPID,
                                                              Part_Num,
                                                              OEM,
                                                              Service_Tag,
                                                              License_Plate,
                                                              _Order__,
                                                              Order_Date,
                                                              Order_Time,
                                                              Date_Shipped,
                                                              Time_Shipped,
                                                              Ship_Code,
                                                              Shipped_By,
                                                              From_Stock_Room,
                                                              Shipped_To,
                                                              Packslip,
                                                              waybill,
                                                              custrtn_wbn,
                                                              Shipment_Reference_Number,
                                                              RMA,
                                                              Unit_Cost,
                                                              F9_Comments,
                                                              Ioc,
                                                              description,
                                                              part_number};
                rowxip_pre_alertRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowxip_pre_alertRow);
                return rowxip_pre_alertRow;
                }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public override global::System.Data.DataTable Clone() {
                xip_pre_alertDataTable cln = ((xip_pre_alertDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new xip_pre_alertDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            internal void InitVars() {
                this.column_DPS__ = base.Columns["DPS #"];
                this.columnPPID = base.Columns["PPID"];
                this.columnPart_Num = base.Columns["Part Num"];
                this.columnOEM = base.Columns["OEM"];
                this.columnService_Tag = base.Columns["Service Tag"];
                this.columnLicense_Plate = base.Columns["License Plate"];
                this.column_Order__ = base.Columns["Order #"];
                this.columnOrder_Date = base.Columns["Order Date"];
                this.columnOrder_Time = base.Columns["Order Time"];
                this.columnDate_Shipped = base.Columns["Date Shipped"];
                this.columnTime_Shipped = base.Columns["Time Shipped"];
                this.columnShip_Code = base.Columns["Ship Code"];
                this.columnShipped_By = base.Columns["Shipped By"];
                this.columnFrom_Stock_Room = base.Columns["From Stock Room"];
                this.columnShipped_To = base.Columns["Shipped To"];
                this.columnPackslip = base.Columns["Packslip"];
                this.columnwaybill = base.Columns["waybill"];
                this.columncustrtn_wbn = base.Columns["custrtn_wbn"];
                this.columnShipment_Reference_Number = base.Columns["Shipment Reference Number"];
                this.columnRMA = base.Columns["RMA"];
                this.columnUnit_Cost = base.Columns["Unit Cost"];
                this.columnF9_Comments = base.Columns["F9 Comments"];
                this.columnIoc = base.Columns["Ioc"];
                this.columndescription = base.Columns["description"];
                this.columnpart_number = base.Columns["part_number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            private void InitClass() {
                this.column_DPS__ = new global::System.Data.DataColumn("DPS #", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_DPS__);
                this.columnPPID = new global::System.Data.DataColumn("PPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPID);
                this.columnPart_Num = new global::System.Data.DataColumn("Part Num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPart_Num);
                this.columnOEM = new global::System.Data.DataColumn("OEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOEM);
                this.columnService_Tag = new global::System.Data.DataColumn("Service Tag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Tag);
                this.columnLicense_Plate = new global::System.Data.DataColumn("License Plate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicense_Plate);
                this.column_Order__ = new global::System.Data.DataColumn("Order #", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column_Order__);
                this.columnOrder_Date = new global::System.Data.DataColumn("Order Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Date);
                this.columnOrder_Time = new global::System.Data.DataColumn("Order Time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Time);
                this.columnDate_Shipped = new global::System.Data.DataColumn("Date Shipped", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Shipped);
                this.columnTime_Shipped = new global::System.Data.DataColumn("Time Shipped", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime_Shipped);
                this.columnShip_Code = new global::System.Data.DataColumn("Ship Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShip_Code);
                this.columnShipped_By = new global::System.Data.DataColumn("Shipped By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipped_By);
                this.columnFrom_Stock_Room = new global::System.Data.DataColumn("From Stock Room", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrom_Stock_Room);
                this.columnShipped_To = new global::System.Data.DataColumn("Shipped To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipped_To);
                this.columnPackslip = new global::System.Data.DataColumn("Packslip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackslip);
                this.columnwaybill = new global::System.Data.DataColumn("waybill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwaybill);
                this.columncustrtn_wbn = new global::System.Data.DataColumn("custrtn_wbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustrtn_wbn);
                this.columnShipment_Reference_Number = new global::System.Data.DataColumn("Shipment Reference Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipment_Reference_Number);
                this.columnRMA = new global::System.Data.DataColumn("RMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMA);
                this.columnUnit_Cost = new global::System.Data.DataColumn("Unit Cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Cost);
                this.columnF9_Comments = new global::System.Data.DataColumn("F9 Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF9_Comments);
                this.columnIoc = new global::System.Data.DataColumn("Ioc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIoc);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnpart_number = new global::System.Data.DataColumn("part_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpart_number);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_pre_alertRow Newxip_pre_alertRow() {
                return ((xip_pre_alertRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new xip_pre_alertRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override global::System.Type GetRowType() {
                return typeof(xip_pre_alertRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.xip_pre_alertRowChanged != null)) {
                    this.xip_pre_alertRowChanged(this, new xip_pre_alertRowChangeEvent(((xip_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.xip_pre_alertRowChanging != null)) {
                    this.xip_pre_alertRowChanging(this, new xip_pre_alertRowChangeEvent(((xip_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.xip_pre_alertRowDeleted != null)) {
                    this.xip_pre_alertRowDeleted(this, new xip_pre_alertRowChangeEvent(((xip_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.xip_pre_alertRowDeleting != null)) {
                    this.xip_pre_alertRowDeleting(this, new xip_pre_alertRowChangeEvent(((xip_pre_alertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Removexip_pre_alertRow(xip_pre_alertRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                XIPPreAlertRev1 ds = new XIPPreAlertRev1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "xip_pre_alertDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                            ;
                                        }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class xip_pre_alertRow : global::System.Data.DataRow {
            
            private xip_pre_alertDataTable tablexip_pre_alert;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            internal xip_pre_alertRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
                this.tablexip_pre_alert = ((xip_pre_alertDataTable)(this.Table));
                }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string _DPS__ {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert._DPS__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPS #\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert._DPS__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string PPID {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.PPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPID\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.PPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Part_Num {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Part_NumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Part Num\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Part_NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string OEM {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.OEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OEM\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.OEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Service_Tag {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Service_TagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service Tag\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Service_TagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string License_Plate {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.License_PlateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'License Plate\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.License_PlateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string _Order__ {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert._Order__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order #\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert._Order__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Order_Date {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Order_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order Date\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Order_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Order_Time {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Order_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order Time\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Order_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Date_Shipped {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Date_ShippedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date Shipped\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Date_ShippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Time_Shipped {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Time_ShippedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time Shipped\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Time_ShippedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Ship_Code {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Ship_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ship Code\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Ship_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipped_By {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Shipped_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipped By\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Shipped_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string From_Stock_Room {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.From_Stock_RoomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'From Stock Room\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.From_Stock_RoomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipped_To {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Shipped_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipped To\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Shipped_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Packslip {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.PackslipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packslip\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.PackslipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string waybill {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.waybillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'waybill\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.waybillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string custrtn_wbn {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.custrtn_wbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'custrtn_wbn\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.custrtn_wbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Shipment_Reference_Number {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Shipment_Reference_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipment Reference Number\' in table \'xip_pre_alert\' is DBNu" +
                                                                            "ll.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Shipment_Reference_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string RMA {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.RMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMA\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.RMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Unit_Cost {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.Unit_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit Cost\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.Unit_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string F9_Comments {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.F9_CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F9 Comments\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.F9_CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string Ioc {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.IocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ioc\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.IocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public string part_number {
                get {
                    try {
                        return ((string)(this[this.tablexip_pre_alert.part_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'part_number\' in table \'xip_pre_alert\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablexip_pre_alert.part_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool Is_DPS__Null() {
                return this.IsNull(this.tablexip_pre_alert._DPS__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Set_DPS__Null() {
                this[this.tablexip_pre_alert._DPS__Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsPPIDNull() {
                return this.IsNull(this.tablexip_pre_alert.PPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetPPIDNull() {
                this[this.tablexip_pre_alert.PPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsPart_NumNull() {
                return this.IsNull(this.tablexip_pre_alert.Part_NumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetPart_NumNull() {
                this[this.tablexip_pre_alert.Part_NumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsOEMNull() {
                return this.IsNull(this.tablexip_pre_alert.OEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetOEMNull() {
                this[this.tablexip_pre_alert.OEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsService_TagNull() {
                return this.IsNull(this.tablexip_pre_alert.Service_TagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetService_TagNull() {
                this[this.tablexip_pre_alert.Service_TagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsLicense_PlateNull() {
                return this.IsNull(this.tablexip_pre_alert.License_PlateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetLicense_PlateNull() {
                this[this.tablexip_pre_alert.License_PlateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool Is_Order__Null() {
                return this.IsNull(this.tablexip_pre_alert._Order__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Set_Order__Null() {
                this[this.tablexip_pre_alert._Order__Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsOrder_DateNull() {
                return this.IsNull(this.tablexip_pre_alert.Order_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetOrder_DateNull() {
                this[this.tablexip_pre_alert.Order_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsOrder_TimeNull() {
                return this.IsNull(this.tablexip_pre_alert.Order_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetOrder_TimeNull() {
                this[this.tablexip_pre_alert.Order_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsDate_ShippedNull() {
                return this.IsNull(this.tablexip_pre_alert.Date_ShippedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetDate_ShippedNull() {
                this[this.tablexip_pre_alert.Date_ShippedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsTime_ShippedNull() {
                return this.IsNull(this.tablexip_pre_alert.Time_ShippedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetTime_ShippedNull() {
                this[this.tablexip_pre_alert.Time_ShippedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsShip_CodeNull() {
                return this.IsNull(this.tablexip_pre_alert.Ship_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetShip_CodeNull() {
                this[this.tablexip_pre_alert.Ship_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsShipped_ByNull() {
                return this.IsNull(this.tablexip_pre_alert.Shipped_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetShipped_ByNull() {
                this[this.tablexip_pre_alert.Shipped_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsFrom_Stock_RoomNull() {
                return this.IsNull(this.tablexip_pre_alert.From_Stock_RoomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetFrom_Stock_RoomNull() {
                this[this.tablexip_pre_alert.From_Stock_RoomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsShipped_ToNull() {
                return this.IsNull(this.tablexip_pre_alert.Shipped_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetShipped_ToNull() {
                this[this.tablexip_pre_alert.Shipped_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsPackslipNull() {
                return this.IsNull(this.tablexip_pre_alert.PackslipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetPackslipNull() {
                this[this.tablexip_pre_alert.PackslipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IswaybillNull() {
                return this.IsNull(this.tablexip_pre_alert.waybillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetwaybillNull() {
                this[this.tablexip_pre_alert.waybillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool Iscustrtn_wbnNull() {
                return this.IsNull(this.tablexip_pre_alert.custrtn_wbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Setcustrtn_wbnNull() {
                this[this.tablexip_pre_alert.custrtn_wbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsShipment_Reference_NumberNull() {
                return this.IsNull(this.tablexip_pre_alert.Shipment_Reference_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetShipment_Reference_NumberNull() {
                this[this.tablexip_pre_alert.Shipment_Reference_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsRMANull() {
                return this.IsNull(this.tablexip_pre_alert.RMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetRMANull() {
                this[this.tablexip_pre_alert.RMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsUnit_CostNull() {
                return this.IsNull(this.tablexip_pre_alert.Unit_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetUnit_CostNull() {
                this[this.tablexip_pre_alert.Unit_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsF9_CommentsNull() {
                return this.IsNull(this.tablexip_pre_alert.F9_CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetF9_CommentsNull() {
                this[this.tablexip_pre_alert.F9_CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsIocNull() {
                return this.IsNull(this.tablexip_pre_alert.IocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetIocNull() {
                this[this.tablexip_pre_alert.IocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tablexip_pre_alert.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void SetdescriptionNull() {
                this[this.tablexip_pre_alert.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public bool Ispart_numberNull() {
                return this.IsNull(this.tablexip_pre_alert.part_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public void Setpart_numberNull() {
                this[this.tablexip_pre_alert.part_numberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class xip_pre_alertRowChangeEvent : global::System.EventArgs {
            
            private xip_pre_alertRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_pre_alertRowChangeEvent(xip_pre_alertRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public xip_pre_alertRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCode()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}